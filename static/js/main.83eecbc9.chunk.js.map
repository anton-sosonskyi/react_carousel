{"version":3,"sources":["components/Carousel.tsx","components/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currScroll","handleNext","props","step","itemWidth","frameSize","images","lenOfHiddenImgs","length","Math","abs","scrollStep","setState","stepLen","handlePrev","this","animationDuration","containerWidth","totalWidth","className","type","onClick","disabled","style","width","transform","transition","map","image","index","src","alt","Component","Form","handleInput","htmlFor","id","name","min","max","defaultValue","onChange","React","PureComponent","App","event","currentTarget","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83eecbc9.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\nimport { FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\n\ntype Props = {\n  images: string[];\n  step: number;\n  itemWidth: number;\n  frameSize: number;\n  animationDuration: number;\n};\n\ntype State = {\n  currScroll: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    currScroll: 0,\n  };\n\n  handleNext = () => {\n    const {\n      step, itemWidth, frameSize, images,\n    } = this.props;\n    const { currScroll } = this.state;\n\n    const lenOfHiddenImgs = (\n      (images.length - frameSize) * itemWidth - Math.abs(currScroll)\n    );\n    const scrollStep = step * itemWidth;\n\n    this.setState(state => {\n      const stepLen = lenOfHiddenImgs > scrollStep\n        ? scrollStep\n        : lenOfHiddenImgs;\n\n      return {\n        currScroll: state.currScroll - stepLen,\n      };\n    });\n  };\n\n  handlePrev = () => {\n    const { step, itemWidth } = this.props;\n    const { currScroll } = this.state;\n\n    const scrollStep = step * itemWidth;\n\n    this.setState(state => {\n      const stepLen = Math.abs(currScroll) > scrollStep\n        ? scrollStep\n        : Math.abs(currScroll);\n\n      return {\n        currScroll: state.currScroll + stepLen,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, animationDuration,\n    } = this.props;\n\n    const { currScroll } = this.state;\n    const containerWidth = itemWidth * frameSize;\n    const totalWidth = images.length * itemWidth;\n\n    return (\n      <div className=\"wrapper\">\n        <button\n          type=\"button\"\n          onClick={this.handlePrev}\n          className=\"carousel__button--prev\"\n          disabled={currScroll === 0}\n        >\n          <FiChevronsLeft className=\"carousel__button\" />\n        </button>\n\n        <div className=\"carousel\" style={{ width: itemWidth * frameSize }}>\n          <div\n            className=\"carousel__container\"\n            style={{\n              width: totalWidth,\n              transform: `translateX(${currScroll}px)`,\n              transition: `transform ${animationDuration / 1000}s ease`,\n            }}\n          >\n            <ul className=\"carousel__list\">\n              {images.map((image, index) => (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={`${index}`}\n                    style={{ width: itemWidth }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={this.handleNext}\n          className=\"carousel__button--next\"\n          disabled={\n            Math.abs(currScroll) + containerWidth === totalWidth\n          }\n        >\n          <FiChevronsRight className=\"carousel__button\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './Form.scss';\n\ntype Props = {\n  handleInput(event: React.ChangeEvent<HTMLInputElement>): void;\n};\n\nexport class Form extends React.PureComponent<Props> {\n  render() {\n    const { handleInput } = this.props;\n\n    return (\n      <form className=\"form\">\n        <fieldset className=\"form__fieldSet\">\n          <legend>Options</legend>\n          <label htmlFor=\"item\">\n            Image width:\n            <input\n              type=\"number\"\n              id=\"item\"\n              name=\"itemWidth\"\n              step={10}\n              min={100}\n              max={450}\n              defaultValue={130}\n              onChange={handleInput}\n              className=\"form__input\"\n            />\n          </label>\n\n          <label htmlFor=\"frame\">\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"frame\"\n              name=\"frameSize\"\n              min={1}\n              max={10}\n              defaultValue={3}\n              onChange={handleInput}\n              className=\"form__input\"\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              name=\"step\"\n              min={1}\n              max={10}\n              defaultValue={3}\n              onChange={handleInput}\n              className=\"form__input\"\n            />\n          </label>\n\n          <label htmlFor=\"duration\">\n            Animation duration:\n            <input\n              type=\"number\"\n              id=\"duration\"\n              name=\"animationDuration\"\n              min={1000}\n              max={5000}\n              defaultValue={1000}\n              onChange={handleInput}\n              step=\"100\"\n              className=\"form__input\"\n            />\n          </label>\n        </fieldset>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n  step: number;\n  itemWidth: number;\n  frameSize: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = event.currentTarget;\n\n    this.setState(state => {\n      return {\n        ...state,\n        [name]: +value,\n      };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"app__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n        />\n\n        <Form handleInput={this.handleInput} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}