{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currScroll","totalImgWidth","props","images","length","itemWidth","handleNextBtn","scrollLen","step","frameSize","scrollStep","spaceLeft","Math","abs","setState","handlePrevBtn","this","animationDuration","containerWidth","totalWidth","className","type","onClick","disabled","style","width","transform","transition","map","image","index","src","alt","Component","App","handleInput","event","currentTarget","value","name","stateCopy","htmlFor","id","min","max","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7b4ed1c.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\nimport { FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\n\ntype Props = {\n  images: string[];\n  step: number;\n  itemWidth: number;\n  frameSize: number;\n  animationDuration: number;\n};\n\ntype State = {\n  currScroll: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    currScroll: 0,\n  };\n\n  totalImgWidth = this.props.images.length * this.props.itemWidth;\n\n  handleNextBtn = () => {\n    const {\n      step, itemWidth, frameSize, images,\n    } = this.props;\n    const { currScroll } = this.state;\n\n    let scrollLen = 0;\n    const totalWidth = images.length * itemWidth;\n    const scrollStep = step * itemWidth;\n    const spaceLeft = (\n      totalWidth - Math.abs(currScroll) - (itemWidth * frameSize)\n    );\n\n    scrollLen = spaceLeft > scrollStep ? (\n      currScroll - scrollStep\n    ) : (\n      currScroll - spaceLeft\n    );\n    this.setState({ currScroll: scrollLen });\n  };\n\n  handlePrevBtn = () => {\n    const { step, itemWidth } = this.props;\n    const { currScroll } = this.state;\n    let scrollLen = 0;\n    const scrollStep = step * itemWidth;\n\n    const spaceLeft = Math.abs(currScroll);\n\n    scrollLen = spaceLeft > scrollStep ? (\n      currScroll + scrollStep\n    ) : (\n      currScroll + spaceLeft\n    );\n    this.setState({ currScroll: scrollLen });\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, animationDuration,\n    } = this.props;\n\n    const { currScroll } = this.state;\n    const containerWidth = itemWidth * frameSize;\n    const totalWidth = images.length * itemWidth;\n\n    return (\n      <div className=\"wrapper\">\n        <button\n          type=\"button\"\n          onClick={this.handlePrevBtn}\n          className=\"carousel__button--prev\"\n          disabled={currScroll === 0}\n        >\n          <FiChevronsLeft className=\"carousel__button\" />\n        </button>\n\n        <div className=\"carousel\" style={{ width: itemWidth * frameSize }}>\n          <div\n            className=\"carousel__container \"\n            style={{\n              width: totalWidth,\n              transform: `translateX(${currScroll}px)`,\n              transition: `transform ${animationDuration / 1000}s ease`,\n            }}\n          >\n            <ul className=\"carousel__list\">\n              {images.map((image, index) => (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={`${index}`}\n                    style={{ width: itemWidth }}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={this.handleNextBtn}\n          className=\"carousel__button--next\"\n          disabled={\n            Math.abs(currScroll) + containerWidth === totalWidth\n          }\n        >\n          <FiChevronsRight className=\"carousel__button\" />\n        </button>\n      </div>\n\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  itemWidth: number;\n  frameSize: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value, name } = event.currentTarget;\n    const stateCopy = { ...this.state };\n\n    this.setState({\n      ...stateCopy,\n      [name]: +value,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          animationDuration={animationDuration}\n        />\n\n        <form className=\"App__form\">\n          <fieldset className=\"App__fieldSet\">\n            <legend>Options</legend>\n            <label htmlFor=\"itemWidth\">\n              Image width:\n              <input\n                type=\"number\"\n                id=\"itemWidth\"\n                name=\"itemWidth\"\n                step={10}\n                min={100}\n                max={450}\n                value={itemWidth}\n                onChange={this.handleInput}\n                className=\"App__input\"\n              />\n            </label>\n\n            <label htmlFor=\"frameSize\">\n              Frame size:\n              <input\n                type=\"number\"\n                id=\"frameSize\"\n                name=\"frameSize\"\n                min={1}\n                max={images.length}\n                value={frameSize}\n                onChange={this.handleInput}\n                className=\"App__input\"\n              />\n            </label>\n\n            <label htmlFor=\"step\">\n              Step:\n              <input\n                type=\"number\"\n                id=\"step\"\n                name=\"step\"\n                min={1}\n                max={frameSize}\n                value={step}\n                onChange={this.handleInput}\n                className=\"App__input\"\n              />\n            </label>\n\n            <label htmlFor=\"animationDuration\">\n              Animation duration:\n              <input\n                type=\"number\"\n                id=\"animationDuration\"\n                name=\"animationDuration\"\n                min={1000}\n                max={5000}\n                value={animationDuration}\n                onChange={this.handleInput}\n                step=\"100\"\n                className=\"App__input\"\n              />\n            </label>\n          </fieldset>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}